{"version":3,"sources":["cogito/monthly_summary.cljs"],"mappings":"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","names":["cogito.monthly-summary/get-year-options","current-year","js/Date","start-year","iter__5480__auto__","s__11393","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5478__auto__","size__5479__auto__","cljs.core/count","b__11395","cljs.core/chunk-buffer","i__11394","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__11392","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","year","cljs.core.range","cogito.monthly-summary/monthly-summary-tab","yearly-summaries","re_frame.core.subscribe","yearly-generating?","selected-year","reagent.core.atom","cljs.core/deref","p1__11413#","cljs.core/reset!","js/parseInt","s__11422","b__11424","i__11423","iter__11421","option","re-frame.core/dispatch","and__5000__auto__","s__11448","b__11450","i__11449","vec__11451","cljs.core.nth","iter__11447","vec__11484","month","summary-data","cljs.core.sort_by","e11454","e11487","month-num","date-obj","js/isNaN","js/Error","e","summary-text","paragraphs","clojure.string.split","s__11473","b__11475","i__11474","iter__11472","s__11489","b__11491","i__11490","iter__11488","paragraph","cljs.core.map","clojure.string/trim","cljs.core/empty?","cljs.core/chunk-first"],"sourcesContent":["(ns cogito.monthly-summary\n  (:require [reagent.core :as r]\n            [re-frame.core :as rf]\n            [clojure.string :as str]))\n\n(defn get-year-options []\n  \"Generate year options for the past 3 years\"\n  (let [current-year (.getFullYear (js/Date.))\n        start-year (- current-year 2)]\n    (for [year (range start-year (inc (inc current-year)))]\n      {:value year\n       :label (str year)})))\n\n(defn monthly-summary-tab []\n  (let [yearly-summaries (rf/subscribe [:monthly-summary/yearly-summaries])\n        yearly-generating? (rf/subscribe [:monthly-summary/yearly-summaries-generating?])\n        selected-year (r/atom (.getFullYear (js/Date.)))]\n    (fn []\n      [:div.monthly-summary-tab.h-full.flex.flex-col\n       [:div.header.border-b.pb-4.mb-4\n        [:div.flex.justify-between.items-center\n         [:h2.text-xl.font-semibold.text-gray-900 \"Monthly Summary\"]\n         [:div.flex.items-center.space-x-4\n          [:select.text-sm.bg-white.border.border-gray-300.rounded.px-3.py-2.focus:outline-none.focus:ring-2.focus:ring-blue-500\n           {:value @selected-year\n            :on-change #(reset! selected-year (js/parseInt (-> % .-target .-value)))\n            :disabled @yearly-generating?}\n           (for [option (get-year-options)]\n             ^{:key (:value option)}\n             [:option {:value (:value option)} (:label option)])]\n          [:button.px-4.py-2.text-sm.bg-green-500.text-white.rounded.hover:bg-green-600.disabled:opacity-50.flex.items-center.space-x-2\n           {:on-click #(rf/dispatch [:monthly-summary/generate-yearly-summaries @selected-year])\n            :disabled @yearly-generating?}\n           (when @yearly-generating?\n             [:div.animate-spin.rounded-full.h-4.w-4.border-b-2.border-white])\n           [:span (if @yearly-generating? \"Generating...\" \"Generate Year\")]]\n          [:p.text-xs.text-green-500.font-mono \"v1.0.0\"]]]\n        [:p.text-sm.text-gray-600 \"AI summaries for each month of the selected year\"]]\n       \n       [:div.flex-1.overflow-y-auto.p-4\n        (cond\n          @yearly-generating?\n          [:div.flex.justify-center.items-center.py-12\n           [:div.animate-spin.rounded-full.h-8.w-8.border-b-2.border-green-600.mr-3]\n           [:span.text-gray-600 \"Generating yearly summaries...\"]]\n          \n          (and @yearly-summaries (seq @yearly-summaries))\n          [:div.space-y-6\n           (for [[month summary-data] (sort-by first @yearly-summaries)]\n             ^{:key month}\n             [:div.border.border-gray-200.rounded-lg.p-6.bg-white.shadow-sm\n              [:div.mb-4\n               [:h4.text-xl.font-semibold.text-gray-800\n                (try\n                  ;; month comes from backend as 0-11 (JS month format)\n                  (let [month-num (if (string? month) (js/parseInt month) month)\n                        date-obj (js/Date. @selected-year month-num 1)]\n                    (if (js/isNaN (.getTime date-obj))\n                      (str \"Month \" month \" \" @selected-year)\n                      (.toLocaleDateString date-obj \"en-US\" \n                                         #js {:month \"long\" :year \"numeric\"})))\n                  (catch js/Error e\n                    (str \"Month \" month \" \" @selected-year \" (Error: \" (.-message e) \")\")))]]\n              [:div.text-gray-700.leading-relaxed.space-y-3\n               (let [summary-text (:summary summary-data)\n                     paragraphs (clojure.string/split summary-text #\"\\n\\n\")]\n                 (for [paragraph (map clojure.string/trim paragraphs)]\n                   (when (not (empty? paragraph))\n                     ^{:key paragraph}\n                     [:p paragraph])))]])]\n          \n          :else\n          [:div.text-center.py-12\n           [:p.text-gray-500.mb-4 \"No summaries generated yet\"]\n           [:p.text-sm.text-gray-400 \"Click 'Generate Year' to create AI summaries for each month of the selected year\"]])]])))"]}