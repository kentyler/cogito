{"version":3,"sources":["cogito/invitations/events.cljs"],"mappings":";AAKA,yDAAA,zDAACA,kIAEA,WAAAC,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAC,4BAAAD;SAAA,AAAAE,4CAAAF,eAAA,hEAAaK;IAAbF,aAAAJ;QAAA,AAAAK,4CAAAD,WAAA,IAAA,/DAAmBG;YAAnB,AAAAF,4CAAAD,WAAA,IAAA,nEAAqBI;AAArB,AAAA,kDAAA,qUAAA,iEAAA,2CAAA,uDAAA,oDAAA,mDAAA,wBAAA,wDAAA,2CAAA,qEAAA,0FAAA,iOAAA,iEAAA,mFAAA,kGAAA,gEAAA,mFAAA,n6CACO,wDAAA,gFAAA,uDAAA,2EAAA,1QAACC,qDAAMH,4pBAIkBE,wEACR,AAACE,2GACQ,+BAAA,2CAAA,8DAAA,xIAACC;;AAInC,yDAAA,zDAACC,mJAEA,cAAAC,HAAKP;AAAL,AAAA,IAAAQ,aAAAD;QAAA,AAAAR,4CAAAS,WAAA,IAAA,/DAASP;eAAT,AAAAF,4CAAAS,WAAA,IAAA,tEAAWC;AAAX,0JACMT,rDACA,wDAAA,gFAAA,wDAAA,hMAACG,gSACmC,CAAA,kEAA2B,AAAA,qFAAQM,veACvE,kgBAAA,lgBAACC,4kBAAyBC,eAAK,AAAA,qFAAQF,tuBACvC,ivBAAA,1uBAACC,s0BAAkCE;;AAE1C,yDAAA,zDAACN,kJAEA,cAAAO,HAAKb;AAAL,AAAA,IAAAc,aAAAD;QAAA,AAAAd,4CAAAe,WAAA,IAAA,/DAASb;IAATc,aAAA,AAAAhB,4CAAAe,WAAA,IAAA;IAAAC,iBAAA,AAAAnB,4BAAAmB;eAAA,AAAAlB,4CAAAkB,eAAA,tEAAmBN;AAAnB,AACE,+DAAA,gFAAA,wDAAA,hMAACN,qDAAMH,sNACsB,iBAAAgB,mBAAI,AAAA,qFAAQP;AAAZ,AAAA,oBAAAO;AAAAA;;AAAA;;;;AAEhC,yDAAA,zDAACxB,oJAEA,WAAAyB,SAAkBhB;AAAlB,AAAA,IAAAiB,aAAAD;IAAAC,iBAAA,AAAAtB,4BAAAsB;SAAA,AAAArB,4CAAAqB,eAAA,hEAAalB;AAAb,AAAA,kDAAA,sLAAA,iEAAA,2CAAA,uDAAA,mDAAA,mDAAA,2BAAA,0FAAA,iOAAA,iEAAA,mFAAA,iGAAA,gEAAA,mFAAA,7mCACO,iDAAA,+EAAA,hIAACG,8CAAMH,sbAGU,AAACI,2GACQ,+BAAA,2CAAA,8DAAA,xIAACC;;AAInC,yDAAA,zDAACC,kJAEA,cAAAa,HAAKnB;AAAL,AAAA,IAAAoB,aAAAD;QAAA,AAAApB,4CAAAqB,WAAA,IAAA,/DAASnB;eAAT,AAAAF,4CAAAqB,WAAA,IAAA,tEAAWX;AAAX,AACE,+DAAA,+EAAA,wDAAA,/LAACN,qDAAMH,0NACwB,AAAA,kGAAcS;;AAEhD,yDAAA,zDAACH,mJAEA,cAAAe,HAAKrB;AAAL,AAAA,IAAAsB,aAAAD;QAAA,AAAAtB,4CAAAuB,WAAA,IAAA,/DAASrB;YAAT,AAAAF,4CAAAuB,WAAA,IAAA,nEAAWrB;AAAX,AACE,+DAAA,+EAAA,wDAAA,gFAAA,/QAACE,qDAAMH;;AAGV,yDAAA,zDAACM,uJAEA,WAAKN,GAAGC;AAAR,AACE,gEAAA,6HAAA,tLAACsB,sDAAOvB","names":["re_frame.core.reg_event_fx","p__11524","p__11525","map__11530","cljs.core/--destructure-map","cljs.core.get","vec__11531","cljs.core.nth","db","_","email","cljs.core.assoc","ajax.core/json-request-format","ajax.core/json-response-format","re_frame.core.reg_event_db","p__11537","vec__11540","response","cljs.core.update","cljs.core/conj","cljs.core/inc","p__11545","vec__11546","map__11549","or__5002__auto__","p__11554","map__11556","p__11560","vec__11561","p__11565","vec__11567","cljs.core.dissoc"],"sourcesContent":["(ns cogito.invitations.events\n  (:require [re-frame.core :as rf]\n            [ajax.core :as ajax]))\n\n;; Events\n(rf/reg-event-fx\n :invitations/send\n (fn [{:keys [db]} [_ email]]\n   {:db (assoc db :invitations/sending true\n               :invitations/error nil)\n    :http-xhrio {:method :post\n                 :uri \"/api/invitations/send\"\n                 :params {:email email}\n                 :format (ajax/json-request-format)\n                 :response-format (ajax/json-response-format {:keywords? true})\n                 :on-success [:invitations/send-success]\n                 :on-failure [:invitations/send-failure]}}))\n\n(rf/reg-event-db\n :invitations/send-success\n (fn [db [_ response]]\n   (-> db\n       (assoc :invitations/sending false\n              :invitations/success-message (str \"Invitation sent to \" (:email response)))\n       (update :invitations/sent conj (:email response))\n       (update :invitations/pending-count inc))))\n\n(rf/reg-event-db\n :invitations/send-failure\n (fn [db [_ {:keys [response]}]]\n   (assoc db :invitations/sending false\n             :invitations/error (or (:error response) \"Failed to send invitation\"))))\n\n(rf/reg-event-fx\n :invitations/load-pending\n (fn [{:keys [db]} _]\n   {:db (assoc db :invitations/loading true)\n    :http-xhrio {:method :get\n                 :uri \"/api/invitations/pending\"\n                 :format (ajax/json-request-format)\n                 :response-format (ajax/json-response-format {:keywords? true})\n                 :on-success [:invitations/load-success]\n                 :on-failure [:invitations/load-failure]}}))\n\n(rf/reg-event-db\n :invitations/load-success\n (fn [db [_ response]]\n   (assoc db :invitations/loading false\n             :invitations/pending (:invitations response))))\n\n(rf/reg-event-db\n :invitations/load-failure\n (fn [db [_ _]]\n   (assoc db :invitations/loading false\n             :invitations/pending [])))\n\n(rf/reg-event-db\n :invitations/clear-messages\n (fn [db _]\n   (dissoc db :invitations/error :invitations/success-message)))"]}