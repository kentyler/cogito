{"version":3,"sources":["cogito/subs.cljs"],"mappings":";AAGA,2DAAA,3DAACA,qLAEA,WAAKC;AAAL,AACE,OAAA,sGAAiBA;;AAEpB,2DAAA,3DAACD,qKAEA,WAAKC;AAAL,AACE,OAAA,sFAAQA;;AAEX,2DAAA,3DAACD,0KAEA,WAAKC;AAAL,AACE,OAAA,2FAAWA;;AAEd,2DAAA,3DAACD,uLAEA,WAAKC;AAAL,AACE,OAAA,wGAAiBA;;AAEpB,2DAAA,3DAACD,kKAEA,WAAKC;AAAL,AACE,OAAA,mFAAOA;;AAEV,2DAAA,3DAACD,2MAEA,WAAKC;AAAL,AACE,OAAA,4HAA4BA;;AAE/B,2DAAA,3DAACD,4LAEA,WAAKC;AAAL,AACE,OAAA,6GAAoBA;;AAEvB,2DAAA,3DAACD,4LAEA,WAAKC;AAAL,AACE,OAAA,6GAAoBA;;AAEvB,2DAAA,3DAACD,uMAEA,WAAKC;AAAL,AACE,OAAA,wHAAyBA;;AAE5B,2DAAA,3DAACD,mLAEA,WAAKC;AAAL,AACE,OAAA,oGAAeA;;AAElB,2DAAA,3DAACD,4MAEA,cAAAE,HAAKD;AAAL,AAAA,IAAAE,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAASE;cAAT,AAAAD,4CAAAD,WAAA,IAAA,rEAAWG;AAAX,AACE,yDAAA,mFAAA,mGAAA,xOAACC,+CAAON,yKAAyBK;;AAEpC,2DAAA,3DAACN,8LAEA,WAAKC;AAAL,AACE,sDAAA,iFAAA,hIAACO,4CAAIP;;AAGR,2DAAA,3DAACD,kMAEA,WAAKC;AAAL,AACE,sDAAA,qFAAA,pIAACO,4CAAIP;;AAER,2DAAA,3DAACD,gMAEA,WAAKC;AAAL,AACE,sDAAA,/CAACO,4CAAIP;;AAER,2DAAA,3DAACD,wLAEA,WAAKC;AAAL,AACE,sDAAA,2EAAA,1HAACO,4CAAIP;;AAER,2DAAA,3DAACD,8KAEA,WAAKC;AAAL,AACE,yDAAA,mFAAA,qDAAA,1LAACM,+CAAON;;AAEX,2DAAA,3DAACD,yMAEA,WAAKC;AAAL,AACE,sDAAA,4FAAA,3IAACO,4CAAIP;;AAER,2DAAA,3DAACD,6MAEA,WAAKC;AAAL,AACE,sDAAA,gGAAA,/IAACO,4CAAIP;;AAER,2DAAA,3DAACD,2MAEA,WAAKC;AAAL,AACE,sDAAA,8FAAA,7IAACO,4CAAIP;;AAGR,2DAAA,3DAACD,oMAEA,WAAKC;AAAL,AACE,sDAAA,uFAAA,tIAACO,4CAAIP;;AAER,2DAAA,3DAACD,sMAEA,WAAKC;AAAL,AACE,sDAAA,yFAAA,xIAACO,4CAAIP;;AAER,2DAAA,3DAACD,yMAEA,WAAKC;AAAL,AACE,sDAAA,4FAAA,3IAACO,4CAAIP","names":["re_frame.core.reg_sub","db","p__11482","vec__11483","cljs.core.nth","_","turn-id","cljs.core.get_in","cljs.core.get"],"sourcesContent":["(ns cogito.subs\n  (:require [re-frame.core :as rf]))\n\n(rf/reg-sub\n :current-prompt\n (fn [db]\n   (:current-prompt db)))\n\n(rf/reg-sub\n :turns\n (fn [db]\n   (:turns db)))\n\n(rf/reg-sub\n :loading?\n (fn [db]\n   (:loading? db)))\n\n(rf/reg-sub\n :authenticated?\n (fn [db]\n   (:authenticated? db)))\n\n(rf/reg-sub\n :user\n (fn [db]\n   (:user db)))\n\n(rf/reg-sub\n :pending-client-selection?\n (fn [db]\n   (:pending-client-selection? db)))\n\n(rf/reg-sub\n :available-clients\n (fn [db]\n   (:available-clients db)))\n\n(rf/reg-sub\n :selecting-client?\n (fn [db]\n   (:selecting-client? db)))\n\n(rf/reg-sub\n :client-selection-error\n (fn [db]\n   (:client-selection-error db)))\n\n(rf/reg-sub\n :logging-out?\n (fn [db]\n   (:logging-out? db)))\n\n(rf/reg-sub\n :current-alternative-index\n (fn [db [_ turn-id]]\n   (get-in db [:alternative-indices turn-id] 0)))\n\n(rf/reg-sub\n :workbench/active-tab\n (fn [db]\n   (get db :workbench/active-tab :conversation)))\n\n;; Bot creation subscriptions\n(rf/reg-sub\n :bot-creation/loading?\n (fn [db]\n   (get db :bot-creation/loading? false)))\n\n(rf/reg-sub\n :bot-creation/message\n (fn [db]\n   (get db :bot-creation/message)))\n\n(rf/reg-sub\n :bot-creation/bots\n (fn [db]\n   (get db :bot-creation/bots [])))\n\n(rf/reg-sub\n :user-email\n (fn [db]\n   (get-in db [:user :email])))\n\n(rf/reg-sub\n :bot-creation/running-bots\n (fn [db]\n   (get db :bot-creation/running-bots [])))\n\n(rf/reg-sub\n :bot-creation/fetching-bots?\n (fn [db]\n   (get db :bot-creation/fetching-bots? false)))\n\n(rf/reg-sub\n :bot-creation/shutting-down\n (fn [db]\n   (get db :bot-creation/shutting-down {})))\n\n;; Stuck meetings subscriptions\n(rf/reg-sub\n :stuck-meetings/meetings\n (fn [db]\n   (get db :stuck-meetings/meetings [])))\n\n(rf/reg-sub\n :stuck-meetings/fetching?\n (fn [db]\n   (get db :stuck-meetings/fetching? false)))\n\n(rf/reg-sub\n :stuck-meetings/completing\n (fn [db]\n   (get db :stuck-meetings/completing {})))"]}