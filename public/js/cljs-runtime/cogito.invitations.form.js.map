{"version":3,"sources":["cogito/invitations/form.cljs"],"mappings":";AAKA,0CAAA,1CAAMA;AAAN,AACE,IAAMC,QAAM,gDAAA,hDAACC;AAAb,AACE;AAAA,AACE,cAAA,AAAAC,VAAMG,0BAAS,sDAAA,mFAAA,zIAACC;YAAhB,AAAAJ,RACMK,wBAAO,sDAAA,mFAAA,zIAACD;cADd,AAAAJ,VAEMM,0BAAS,sDAAA,mFAAA,zIAACF;AAFhB,AAAA,0FAAA,4DAAA,mFAAA,sGAAA,0BAAA,mFAAA,yEAAA,mFAAA,uHAAA,2CAAA,qDAAA,QAAA,mEAAA,sBAAA,sDAAA,AAAAJ,uBAAA,sEAAA,+DAAA,WAAAC,vJAScH,qEACEK;AAVhB,AAWkB,OAACI,sBAAOT,MAAM,AAAA,AAAAG;GAXhC,qEAAA,WAAAC;AAAA,AAYqB,GAAM,6CAAA,7CAACM,kDAAK,AAAAN;AAAZ,AACC,GAAM,EAAK,AAACO,cAAIN,cAAS,GAAK,4BAAA,AAAAH,5BAACU,4CAAYZ;AAA3C,AACE,uBAAA,mFAAA,yEAAA,AAAAE,nLAACW,mMAAgCb;;AACjC,mCAAA,5BAACS,sBAAOT;;AAFV;;;AADD;;mBAZrB,mFAAA,uNAAA,2CAAA,8DAiBgB,iBAAAc,mBAAIT;AAAJ,AAAA,oBAAAS;AAAAA;;AAAY,mCAAA,AAAAZ,5BAACU,4CAAYZ;;KAjBzC,6DAAA;AAAA,AAkBiB,AAAI,uBAAA,mFAAA,yEAAA,AAAAE,nLAACW,mMAAgCb;;AAClC,mCAAA,5BAACS,sBAAOT;WACvB,2BAAA,aAAA,tBAAIK,yDAEN,yBAAA,AAAA,mFAAA,sHAAA,hNAAME,kMAC4BA,oBAElC,2BAAA,AAAA,mFAAA,2HAAA,vNAAMC,uMAC8BA","names":["cogito.invitations.form/invitation-form","email","reagent.core.atom","cljs.core/deref","p1__11584#","p1__11585#","sending","re_frame.core.subscribe","error","success","cljs.core/reset!","cljs.core._EQ_","cljs.core/not","clojure.string/blank?","re-frame.core/dispatch","or__5002__auto__"],"sourcesContent":["(ns cogito.invitations.form\n  (:require [re-frame.core :as rf]\n            [reagent.core :as r]\n            [clojure.string :as str]))\n\n(defn invitation-form []\n  (let [email (r/atom \"\")]\n    (fn []\n      (let [sending @(rf/subscribe [:invitations/sending])\n            error @(rf/subscribe [:invitations/error])\n            success @(rf/subscribe [:invitations/success-message])]\n        [:div.mb-8\n         [:h3.text-lg.font-semibold.mb-4 \"Send Invitation\"]\n         [:div.flex.gap-2\n          [:input.flex-1.px-3.py-2.border.rounded\n           {:type \"email\"\n            :placeholder \"Enter email address\"\n            :value @email\n            :disabled sending\n            :on-change #(reset! email (-> % .-target .-value))\n            :on-key-press #(when (= 13 (.-keyCode %))\n                            (when (and (not sending) (not (str/blank? @email)))\n                              (rf/dispatch [:invitations/send @email])\n                              (reset! email \"\")))}]\n          [:button.px-4.py-2.bg-blue-500.text-white.rounded.hover:bg-blue-600.disabled:opacity-50\n           {:disabled (or sending (str/blank? @email))\n            :on-click #(do (rf/dispatch [:invitations/send @email])\n                          (reset! email \"\"))}\n           (if sending \"Sending...\" \"Send Invitation\")]]\n         \n         (when error\n           [:div.mt-2.text-red-600.text-sm error])\n         \n         (when success\n           [:div.mt-2.text-green-600.text-sm success])]))))"]}