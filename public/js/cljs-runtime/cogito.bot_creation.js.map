{"version":3,"sources":["cogito/bot_creation.cljs"],"mappings":"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","names":["cogito.bot-creation/bot-creation-form","form-data","reagent.core.atom","loading?","re_frame.core.subscribe","message","user-email","p1__12789#","cljs.core/deref","p1__12790#","cljs.core._EQ_","e","re-frame.core/dispatch","cljs.core.swap_BANG_","cljs.core/assoc","or__5002__auto__","cljs.core/empty?","cogito.bot-creation/bot-list","bots","cljs.core/seq","iter__5480__auto__","s__12807","cljs.core/LazySeq","temp__5804__auto__","cljs.core/chunked-seq?","c__5478__auto__","size__5479__auto__","cljs.core/count","b__12809","cljs.core/chunk-buffer","i__12808","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__12806","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","bot","js/Date","cogito.bot-creation/running-bots-list","running-bots","fetching?","shutting-down","s__12822","b__12824","i__12823","iter__12821","G__12826","G__12835","cljs.core.get","cogito.bot-creation/stuck-meetings-list","stuck-meetings","completing","s__12856","b__12858","i__12857","iter__12855","meeting","cogito.bot-creation/bot-creation-tab","cljs.core/chunk-first"],"sourcesContent":["(ns cogito.bot-creation\n  (:require [reagent.core :as r]\n            [re-frame.core :as rf]\n            [ajax.core :as ajax]))\n\n(defn bot-creation-form []\n  (let [form-data (r/atom {:meeting-url \"\" :meeting-name \"\"})\n        loading? (rf/subscribe [:bot-creation/loading?])\n        message (rf/subscribe [:bot-creation/message])\n        user-email (rf/subscribe [:user-email])]\n    (fn []\n      [:div.bot-creation-tab.p-6.max-w-2xl.mx-auto\n       [:h2.text-2xl.font-bold.mb-6 \"Create Recall Bot\"]\n       \n       (when @message\n         [:div.message-display.p-4.mb-4.rounded\n          {:class (if (= (:type @message) :error)\n                    \"bg-red-100 text-red-700\"\n                    \"bg-green-100 text-green-700\")}\n          (:text @message)])\n       \n       [:form.space-y-4\n        {:on-submit (fn [e]\n                      (.preventDefault e)\n                      (rf/dispatch [:bot-creation/create-bot @form-data]))}\n        \n        [:div.form-group\n         [:label.block.text-sm.font-medium.text-gray-700.mb-1\n          {:for \"meeting-url\"} \n          \"Meeting URL\"]\n         [:input.w-full.px-3.py-2.border.border-gray-300.rounded-md.focus:outline-none.focus:ring-2.focus:ring-blue-500\n          {:type \"text\"\n           :id \"meeting-url\"\n           :value (:meeting-url @form-data)\n           :on-change #(swap! form-data assoc :meeting-url (-> % .-target .-value))\n           :placeholder \"Enter the meeting URL\"\n           :required true\n           :disabled @loading?}]]\n        \n        [:div.form-group\n         [:label.block.text-sm.font-medium.text-gray-700.mb-1\n          {:for \"meeting-name\"} \n          \"Meeting Name (optional)\"]\n         [:input.w-full.px-3.py-2.border.border-gray-300.rounded-md.focus:outline-none.focus:ring-2.focus:ring-blue-500\n          {:type \"text\"\n           :id \"meeting-name\"\n           :value (:meeting-name @form-data)\n           :on-change #(swap! form-data assoc :meeting-name (-> % .-target .-value))\n           :placeholder \"Enter a name for this meeting\"\n           :disabled @loading?}]]\n        \n        (when @user-email\n          [:div.info-box.p-3.bg-blue-50.rounded-md\n           [:p.text-sm.text-gray-700\n            \"Transcript will be sent to: \"\n            [:span.font-medium @user-email]]])\n        \n        [:button.w-full.px-4.py-2.bg-blue-600.text-white.rounded-md.hover:bg-blue-700.focus:outline-none.focus:ring-2.focus:ring-blue-500.disabled:opacity-50.disabled:cursor-not-allowed\n         {:type \"submit\"\n          :disabled (or @loading? (empty? (:meeting-url @form-data)))}\n         (if @loading? \"Creating Bot...\" \"Create Bot\")]]])))\n\n(defn bot-list []\n  (let [bots (rf/subscribe [:bot-creation/bots])]\n    (fn []\n      (when (seq @bots)\n        [:div.bot-list.mt-8\n         [:h3.text-lg.font-semibold.mb-4 \"Recently Created Bots\"]\n         [:div.space-y-2\n          (for [bot @bots]\n            ^{:key (:id bot)}\n            [:div.bot-item.p-4.border.border-gray-200.rounded-md\n             [:div.font-medium (:meeting_name bot \"Unnamed Meeting\")]\n             [:div.text-sm.text-gray-600 (:meeting_url bot)]\n             [:div.text-xs.text-gray-500 \n              \"Created: \" (-> bot :created_at js/Date. .toLocaleString)]])]]))))\n\n(defn running-bots-list []\n  (let [running-bots (rf/subscribe [:bot-creation/running-bots])\n        fetching? (rf/subscribe [:bot-creation/fetching-bots?])\n        shutting-down (rf/subscribe [:bot-creation/shutting-down])]\n    (fn []\n      [:div.running-bots.mt-8\n       [:div.flex.items-center.justify-between.mb-4\n        [:h3.text-lg.font-semibold \"Running Bots\"]\n        [:button.px-3.py-1.text-sm.bg-gray-100.hover:bg-gray-200.rounded.disabled:opacity-50\n         {:on-click #(rf/dispatch [:bot-creation/fetch-bots])\n          :disabled @fetching?}\n         (if @fetching? \"Refreshing...\" \"Refresh\")]]\n       \n       (cond\n         @fetching?\n         [:div.p-4.text-center.text-gray-500 \"Loading bots...\"]\n         \n         (empty? @running-bots)\n         [:div.p-4.text-center.text-gray-500 \"No bots currently running\"]\n         \n         :else\n         [:div.space-y-3\n          (for [bot @running-bots]\n            ^{:key (:id bot)}\n            [:div.bot-item.p-4.border.border-gray-200.rounded-md.bg-white.shadow-sm\n             [:div.flex.items-start.justify-between\n              [:div.flex-1\n               [:div.font-medium.text-gray-900 \n                (or (:meeting_name bot) \"Unnamed Meeting\")]\n               [:div.text-sm.text-gray-600.mt-1 (:meeting_url bot)]\n               [:div.text-xs.text-gray-500.mt-2\n                \"Bot ID: \" (:id bot)]\n               (when (:status bot)\n                 [:div.text-xs.mt-1\n                  [:span.inline-flex.px-2.py-1.text-xs.font-semibold.rounded-full\n                   {:class (case (:status bot)\n                             \"active\" \"bg-green-100 text-green-800\"\n                             \"joining\" \"bg-yellow-100 text-yellow-800\"\n                             \"leaving\" \"bg-orange-100 text-orange-800\"\n                             \"bg-gray-100 text-gray-800\")}\n                   (:status bot)]])]\n              [:button.px-3.py-1.text-sm.bg-red-500.hover:bg-red-600.text-white.rounded.disabled:opacity-50.disabled:cursor-not-allowed\n               {:on-click #(rf/dispatch [:bot-creation/shutdown-bot (:id bot)])\n                :disabled (get @shutting-down (:id bot) false)}\n               (if (get @shutting-down (:id bot))\n                 \"Shutting down...\"\n                 \"Shutdown\")]]])])]))) \n\n(defn stuck-meetings-list []\n  (let [stuck-meetings (rf/subscribe [:stuck-meetings/meetings])\n        fetching? (rf/subscribe [:stuck-meetings/fetching?])\n        completing (rf/subscribe [:stuck-meetings/completing])]\n    (fn []\n      [:div.stuck-meetings.mt-8\n       [:div.flex.items-center.justify-between.mb-4\n        [:h3.text-lg.font-semibold.text-orange-700 \"Stuck Meetings\"]\n        [:button.px-3.py-1.text-sm.bg-gray-100.hover:bg-gray-200.rounded.disabled:opacity-50\n         {:on-click #(rf/dispatch [:stuck-meetings/fetch])\n          :disabled @fetching?}\n         (if @fetching? \"Refreshing...\" \"Refresh\")]]\n       \n       (cond\n         @fetching?\n         [:div.p-4.text-center.text-gray-500 \"Loading stuck meetings...\"]\n         \n         (empty? @stuck-meetings)\n         [:div.p-4.text-center.text-gray-500 \"No stuck meetings found\"]\n         \n         :else\n         [:div.space-y-3\n          (for [meeting @stuck-meetings]\n            ^{:key (:meeting_id meeting)}\n            [:div.meeting-item.p-4.border.border-orange-200.rounded-md.bg-orange-50.shadow-sm\n             [:div.flex.items-start.justify-between\n              [:div.flex-1\n               [:div.font-medium.text-gray-900 \n                (or (:meeting_name meeting) \"Unnamed Meeting\")]\n               [:div.text-sm.text-gray-600.mt-1 (:meeting_url meeting)]\n               [:div.text-xs.text-gray-500.mt-2\n                \"Meeting ID: \" (:meeting_id meeting)]\n               [:div.text-xs.text-gray-500.mt-1\n                \"Bot ID: \" (or (:bot_id meeting) \"N/A\")]\n               [:div.text-xs.text-gray-500.mt-1\n                \"Turn Count: \" (:turn_count meeting)]\n               [:div.text-xs.text-gray-500.mt-1\n                \"Stuck since: \" (-> meeting :created_at js/Date. .toLocaleString)]\n               [:div.text-xs.mt-2\n                [:span.inline-flex.px-2.py-1.text-xs.font-semibold.rounded-full.bg-orange-100.text-orange-800\n                 \"Stuck in joining\"]]]\n              [:button.px-3.py-1.text-sm.bg-orange-500.hover:bg-orange-600.text-white.rounded.disabled:opacity-50.disabled:cursor-not-allowed\n               {:on-click #(rf/dispatch [:stuck-meetings/force-complete (:meeting_id meeting)])\n                :disabled (get @completing (:meeting_id meeting) false)}\n               (if (get @completing (:meeting_id meeting))\n                 \"Completing...\"\n                 \"Force Complete\")]]])])]))) \n\n(defn bot-creation-tab []\n  (rf/dispatch [:bot-creation/fetch-bots])\n  (rf/dispatch [:stuck-meetings/fetch])\n  [:div.bot-creation-container\n   [bot-creation-form]\n   [running-bots-list]\n   [stuck-meetings-list]\n   [bot-list]])"]}