{"version":3,"sources":["cogito/meetings.cljs"],"mappings":"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","names":["re_frame.core.reg_event_fx","p__11278","vec__11280","cljs.core.nth","_","block-id","meeting-name","js/confirm","js/fetch","response","p1__11276#","js/alert","cljs.core.get","cljs.core.js__GT_clj","re-frame.core/dispatch","p1__11277#","p1__11306#","data","error","re_frame.core.reg_event_db","p__11316","vec__11323","db","meetings","cljs.core.assoc","p__11329","vec__11330","p__11341","vec__11369","meeting-id","re_frame.core.reg_sub","cogito.meetings/meeting-conversation-panel","cljs.core/deref","p1__11377#","meeting","cljs.core/first","p1__11372#","cljs.core.filter","cljs.core._EQ_","turns","re_frame.core.subscribe","current-prompt","loading?","or__5002__auto__","G__11382","cogito.meetings/format-date","cljs.core/seq","iter__5480__auto__","s__11385","cljs.core/LazySeq","temp__5804__auto__","cljs.core/chunked-seq?","c__5478__auto__","size__5479__auto__","cljs.core/count","b__11387","cljs.core/chunk-buffer","i__11386","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__11384","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","turn","cljs.core/map?","G__11388","cljs.core/Keyword","G__11389","cljs.core/empty?","date-str","e11402","date","js/Date","js/Error","e","cogito.meetings/simple-meeting-item","selected?","and__5000__auto__","cogito.meetings/meetings-list","selected-meeting","reagent.core.create_class","js/prompt","s__11433","b__11435","i__11434","iter__11432","cogito.meetings/meeting-detail","p1__11444#","cogito.meetings/meetings-page","cljs.core/chunk-first"],"sourcesContent":["(ns cogito.meetings\n  (:require [re-frame.core :as rf]\n            [reagent.core :as r]))\n\n;; Events\n(rf/reg-event-fx\n ::delete-meeting\n (fn [_ [_ block-id meeting-name]]\n   (when (js/confirm (str \"Are you sure you want to delete the meeting '\" meeting-name \"'? This action cannot be undone.\"))\n     (-> (js/fetch (str \"/api/meetings/\" block-id)\n                   #js {:method \"DELETE\"\n                        :credentials \"same-origin\"})\n         (.then (fn [response]\n                  (if (.-ok response)\n                    (.then (.json response)\n                           #(do\n                              (js/alert (get (js->clj % :keywordize-keys true) :message \"Meeting deleted\"))\n                              (rf/dispatch [::load-meetings])))\n                    (.then (.json response)\n                           #(js/alert (str \"Error: \" (get (js->clj % :keywordize-keys true) :error \"Unknown error\")))))))\n         (.catch #(js/alert \"Network error occurred\"))))\n   {}))\n\n(rf/reg-event-fx\n ::load-meetings\n (fn [_ _]\n   (-> (js/fetch \"/api/meetings\"\n                 #js {:credentials \"same-origin\"})\n       (.then #(.json %))\n       (.then (fn [data]\n                (rf/dispatch [::meetings-loaded (js->clj data :keywordize-keys true)])))\n       (.catch (fn [error]\n                 (rf/dispatch [::meetings-load-failed (str error)]))))\n   {}))\n\n(rf/reg-event-db\n ::meetings-loaded\n (fn [db [_ meetings]]\n   (assoc db :meetings meetings)))\n\n(rf/reg-event-db\n ::meetings-load-failed\n (fn [db [_ error]]\n   (assoc db :meetings-error error)))\n\n(rf/reg-event-db\n ::set-selected-meeting\n (fn [db [_ meeting-id]]\n   (assoc db :selected-meeting meeting-id)))\n\n;; Subscriptions\n(rf/reg-sub\n ::meetings\n (fn [db _]\n   (:meetings db)))\n\n(rf/reg-sub\n ::meetings-error\n (fn [db _]\n   (:meetings-error db)))\n\n(rf/reg-sub\n ::selected-meeting\n (fn [db _]\n   (:selected-meeting db)))\n\n(defn meeting-conversation-panel [meeting-id meetings]\n  (let [meeting (first (filter #(= (:block_id %) meeting-id) meetings))\n        turns (rf/subscribe [:turns])\n        current-prompt (rf/subscribe [:current-prompt])\n        loading? (rf/subscribe [:loading?])]\n    \n    [:div {:class \"h-full flex flex-col\"}\n     ;; Header with meeting title\n     [:div {:class \"border-b pb-4 mb-4\"}\n      [:h2 {:class \"text-xl font-semibold text-gray-900\"}\n       (or (:block_name meeting) \"Unnamed Meeting\")]\n      [:p {:class \"text-sm text-gray-500 mt-1\"}\n       (str \"Meeting conversation \u2022 \" (format-date (:created_at meeting)))]]\n     \n     ;; Conversation history - scrollable list with all turns\n     [:div {:class \"flex-1 overflow-y-auto mb-4 space-y-6 min-h-0\"}\n      (if (seq @turns)\n        ;; Show all turns in chronological order (oldest first, newest at bottom)\n        (for [turn @turns]\n          ^{:key (:id turn)}\n          [:div {:class \"space-y-3\"}\n           ;; User prompt\n           [:div {:class \"flex justify-end\"}\n            [:div {:class \"max-w-xs lg:max-w-md px-4 py-2 bg-blue-600 text-white rounded-lg\"}\n             [:div {:class \"text-sm font-medium mb-1\"} \"You\"]\n             [:div (:prompt turn)]]]\n           ;; Assistant response\n           [:div {:class \"flex justify-start\"}\n            [:div {:class \"max-w-xs lg:max-w-md px-4 py-2 bg-gray-100 text-gray-900 rounded-lg\"}\n             [:div {:class \"text-sm font-medium mb-1\"} \"Assistant\"]\n             [:div (if (map? (:response turn))\n                     ;; Handle complex response types\n                     (case (:response-type (:response turn))\n                       :text (:content (:response turn))\n                       :response-set (str \"Response with \" (count (:alternatives (:response turn))) \" alternatives\")\n                       (str (:response turn)))\n                     ;; Simple string response\n                     (str (:response turn)))]]]])\n        [:div {:class \"flex items-center justify-center h-full text-gray-500\"}\n         [:div {:class \"text-center\"}\n          [:p \"No conversation yet.\"]\n          [:p {:class \"text-sm mt-1\"} \"Start typing below to add to this meeting's context.\"]]])]\n     \n     ;; Input area\n     [:div {:class \"border-t pt-4\"}\n      [:textarea {:class \"w-full p-3 border border-gray-300 rounded-md resize-none focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  :rows 3\n                  :placeholder (str \"Continue conversation for \\\"\" (or (:block_name meeting) \"this meeting\") \"\\\"...\")\n                  :value @current-prompt\n                  :on-change #(rf/dispatch [:set-current-prompt (-> % .-target .-value)])\n                  :disabled @loading?}]\n      [:div {:class \"flex justify-between items-center mt-2\"}\n       [:div {:class \"text-xs text-gray-500\"}\n        \"Messages will be tagged with this meeting\"]\n       [:button {:class \"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n                 :disabled (or @loading? (empty? @current-prompt))\n                 :on-click #(rf/dispatch [:submit-meeting-prompt @current-prompt meeting-id])}\n        (if @loading? \"Sending...\" \"Send\")]]]]))\n\n;; Helper functions\n(defn format-date [date-str]\n  (when date-str\n    (try\n      (let [date (js/Date. date-str)]\n        (.toLocaleDateString date \"en-US\" \n                            #js {:year \"numeric\" \n                                 :month \"short\" \n                                 :day \"numeric\"}))\n      (catch js/Error e\n        date-str))))\n\n(defn simple-meeting-item [meeting selected?]\n  [:div {:class (str \"bg-white rounded-lg shadow-sm border p-4 hover:shadow-md transition-shadow duration-200 cursor-pointer \"\n                     (when selected? \"border-blue-500 bg-blue-50\"))}\n   [:div {:class \"flex justify-between items-center\"}\n    [:div {:class \"flex-1\"\n           :on-click #(rf/dispatch [::set-selected-meeting (:block_id meeting)])}\n     [:h3 {:class (str \"text-lg font-medium \" (if selected? \"text-blue-900\" \"text-gray-900\"))}\n      (or (:block_name meeting) \"Unnamed Meeting\")]\n     [:p {:class \"text-sm text-gray-500 mt-1\"}\n      (format-date (:created_at meeting))]\n     [:p {:class \"text-sm text-gray-600 mt-1\"}\n      (str (or (:turn_count meeting) 0) \" turns, \" \n           (or (:participant_count meeting) 0) \" participants\")]]\n    \n    [:div {:class \"flex gap-2\"}\n     [:button {:class \"px-3 py-1 bg-purple-600 text-white text-sm rounded-md hover:bg-purple-700 transition-colors duration-200\"\n               :on-click #(do\n                            (rf/dispatch [:join-meeting meeting])\n                            (rf/dispatch [:workbench/set-active-tab :conversation]))}\n      \"Join\"]\n     \n     [:button {:class \"px-3 py-1 bg-blue-600 text-white text-sm rounded-md hover:bg-blue-700 transition-colors duration-200\"\n               :on-click #(rf/dispatch [::set-selected-meeting (:block_id meeting)])}\n      \"View\"]\n     \n     (when (and (:embedded_count meeting) (> (:embedded_count meeting) 0))\n       [:button {:class \"px-3 py-1 bg-green-600 text-white text-sm rounded-md hover:bg-green-700 transition-colors duration-200\"\n                 :on-click #(do\n                             (rf/dispatch [:cogito.semantic-map-simple/set-current-meeting (:block_id meeting)])\n                             (rf/dispatch [:workbench/set-active-tab :map]))}\n        \"See Map\"])\n     \n     [:button {:class \"px-3 py-1 bg-red-600 text-white text-sm rounded-md hover:bg-red-700 transition-colors duration-200\"\n               :on-click #(rf/dispatch [::delete-meeting (:block_id meeting) (or (:block_name meeting) \"Unnamed Meeting\")])}\n      \"Delete\"]]]])\n\n(defn meetings-list []\n  (let [meetings (rf/subscribe [::meetings])\n        error (rf/subscribe [::meetings-error])\n        selected-meeting (rf/subscribe [::selected-meeting])]\n    \n    (r/create-class\n     {:component-did-mount\n      (fn []\n        (rf/dispatch [::load-meetings]))\n      \n      :reagent-render\n      (fn []\n        [:div {:class \"flex h-full gap-4\"}\n         \n         ;; Left panel - Meetings list\n         [:div {:class \"w-1/3 overflow-y-auto pr-4\"}\n          [:div {:class \"mb-4\"}\n           [:div {:class \"flex justify-between items-center\"}\n            [:h1 {:class \"text-2xl font-bold text-gray-900\"} \"Meetings\"]\n            [:button {:class \"px-3 py-1 bg-green-600 text-white text-sm rounded-md hover:bg-green-700 transition-colors duration-200\"\n                      :on-click #(let [meeting-name (js/prompt \"Enter meeting name:\")]\n                                   (when meeting-name\n                                     (rf/dispatch [:create-new-meeting meeting-name])))}\n             \"New\"]]]\n          \n          ;; Error state\n          (when @error\n            [:div {:class \"bg-red-50 border border-red-200 rounded-md p-4 mb-6\"}\n             [:div {:class \"flex\"}\n              [:div {:class \"ml-3\"}\n               [:h3 {:class \"text-sm font-medium text-red-800\"} \"Error loading meetings\"]\n               [:div {:class \"mt-2 text-sm text-red-700\"}\n                [:p (str @error)]]]]])\n          \n          ;; Loading state\n          (when (and (nil? @meetings) (nil? @error))\n            [:div {:class \"flex justify-center items-center py-12\"}\n             [:div {:class \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"}]])\n          \n          ;; Meetings list\n          (when @meetings\n            (if (seq @meetings)\n              [:div {:class \"space-y-2\"}\n               (for [meeting @meetings]\n                 ^{:key (:block_id meeting)}\n                 [simple-meeting-item meeting (= (:block_id meeting) @selected-meeting)])]\n              \n              [:div {:class \"text-center py-12\"}\n               [:div {:class \"text-gray-500\"}\n                [:p {:class \"text-lg\"} \"No meetings found\"]\n                [:p {:class \"text-sm mt-2\"} \"Create a new meeting bot to get started\"]]]))\n         ] ;; End of left panel\n         \n         ;; Right panel - Conversation\n         [:div {:class \"flex-1 border-l pl-4\"}\n          (if @selected-meeting\n            [meeting-conversation-panel @selected-meeting @meetings]\n            [:div {:class \"flex items-center justify-center h-full text-gray-500\"}\n             [:p \"Select a meeting to continue the conversation\"]])]])})))\n\n(defn meeting-detail [meeting-id]\n  (let [meetings (rf/subscribe [::meetings])\n        meeting (when @meetings \n                  (first (filter #(= (:block_id %) meeting-id) @meetings)))]\n    (fn []\n      (if meeting\n        [:div {:class \"bg-white rounded-lg shadow-md p-6\"}\n         [:div {:class \"mb-4\"}\n          [:button {:class \"text-blue-600 hover:text-blue-800 mb-4\"\n                    :on-click #(rf/dispatch [::set-selected-meeting nil])}\n           \"\u2190 Back to list\"]\n          [:h2 {:class \"text-2xl font-bold text-gray-900\"}\n           (:block_name meeting)]\n          [:p {:class \"text-sm text-gray-500 mt-1\"}\n           (format-date (:created_at meeting))]]\n         \n         [:div {:class \"grid grid-cols-2 gap-4 mb-6\"}\n          [:div {:class \"bg-gray-50 p-4 rounded\"}\n           [:p {:class \"text-sm text-gray-600\"} \"Total Turns\"]\n           [:p {:class \"text-2xl font-semibold\"} (:turn_count meeting)]]\n          [:div {:class \"bg-gray-50 p-4 rounded\"}\n           [:p {:class \"text-sm text-gray-600\"} \"Participants\"]\n           [:p {:class \"text-2xl font-semibold\"} (:participant_count meeting)]]\n          [:div {:class \"bg-gray-50 p-4 rounded\"}\n           [:p {:class \"text-sm text-gray-600\"} \"Embeddings\"]\n           [:p {:class \"text-2xl font-semibold\"} (:embedded_count meeting)]]\n          [:div {:class \"bg-gray-50 p-4 rounded\"}\n           [:p {:class \"text-sm text-gray-600\"} \"Status\"]\n           [:p {:class \"text-lg font-semibold\"} (or (:status meeting) \"Unknown\")]]]\n         \n         (when (:meeting_url meeting)\n           [:div {:class \"mb-4\"}\n            [:p {:class \"text-sm text-gray-600\"} \"Meeting URL\"]\n            [:p {:class \"text-sm font-mono bg-gray-100 p-2 rounded\"} (:meeting_url meeting)]])\n         \n         (when (> (:embedded_count meeting) 0)\n           [:button {:class \"mt-4 px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors duration-200\"\n                     :on-click #(do\n                                  (rf/dispatch [:cogito.semantic-map-simple/set-current-meeting (:block_id meeting)])\n                                  (rf/dispatch [:workbench/set-active-tab :map]))}\n            \"View Semantic Map\"])]\n        \n        [:div \"Meeting not found\"]))))\n\n(defn meetings-page []\n  [meetings-list])"]}